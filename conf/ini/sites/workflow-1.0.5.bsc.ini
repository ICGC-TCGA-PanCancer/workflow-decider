# the output directory is a convention used in many workflows to specify a relative output path
output_dir=seqware-results
# the output_prefix is a convention used to specify the root of the absolute output path or an S3 bucket name
# you should pick a path that is available on all cluster nodes and can be written by your user
output_prefix=./
# cleanup true will remove just the input BAMs if not uploading and the full output directory if uploading
# false there will be no cleanup which is useful for debugging
cleanup=[% cleanup %]

# START NEW ITEMS

# these are just used for tracking
donor_id=[% donorId %]
project_code=[% dccPojectCode %]
workflow_version=[% workflowVersion %]

# memory for upload to SFTP/S3
duckJobMem=16000

# tracking instance types
vm_instance_type=[% vmInstanceType %]
vm_instance_cores=[% vmInstanceCores %]
vm_instance_mem_gb=[% vmInstanceMemGb %]
vm_location_code=[% vmLocationCode %]

# cleanup
cleanupBams=[% cleanupBams %]

# archive tarball
saveUploadArchive=true
uploadArchivePath=./seqware-results/upload_archive/

# options for tarball to SFTP
SFTPUploadArchive=false
# can be overwrite or skip, see https://trac.cyberduck.io/wiki/help/en/howto/cli
SFTPUploadArchiveMode=overwrite
SFTPUploadArchiveUsername=boconnor
SFTPUploadArchivePassword=klsdfskdjfskjd
SFTPUploadArchiveServer=10.1.1.13
SFTPUploadArchivePath=/upload/path/directory/

# options for tarball to S3
S3UploadArchive=false
S3UploadArchiveMode=overwrite
S3UploadArchiveBucketURL=s3://bucketname/uploads/
S3UploadArchiveKey=slkdfjslkdj
S3UploadArchiveSecretKey=lkdjflskdjflskdj

# send the files not a tarball
SFTPUploadFiles=false
# can be overwrite or skip, see https://trac.cyberduck.io/wiki/help/en/howto/cli
SFTPUploadMode=overwrite
SFTPUploadUsername=boconnor
SFTPUploadPassword=klsdfskdjfskjd
SFTPUploadServer=10.1.1.13
SFTPUploadPath=/upload/path/directory/

S3UploadFiles=false
S3UploadFileMode=overwrite
S3UploadBucketURL=s3://bucketname/uploads/
S3UploadKey=slkdfjslkdj
S3UploadSecretKey=lkdjflskdjflskdj

# synapse upload
SynapseUpload=false
SynapseUploadSFTPUsername=boconnor
SynapseUploadSFTPPassword=klsdfskdjfskjd
SynapseUploadUsername=boconnor
SynapseUploadPassword=klsdfskdjfskjd
SynapseUploadURL=sftp://tcgaftps.nci.nih.gov/tcgapancan/pancan/variant_calling_pilot_64/OICR_Sanger_Core
SynapseUploadParent=syn3155834

# if set, these trigger an upload of the input bam file to a GNOS repository
bamUploadServer=
bamUploadPemFile=
bamUploadStudyRefnameOverride=
bamUploadAnalysisCenterOverride=
bamUploadScriptJobMem=10000
bamUploadScriptJobSlots=1

# if set to true GNOS is still used for downloading metadata but the input bam file paths are assumed to be local file paths
# specifically tumourBams is a colon-delimited list of full file paths and controlBam is a full file path
localFileMode=[% localFileMode %]
# if localFileMode is true then you need to give the path where the decider downloads all the XML
# this is the path that the VM/Docker/workflow sees (might be different from your path)
localXMLMetadataPath=[% localXMLMetadataPath %]

# another option for upload
skip-validate=[% skipValidate %]

# when localFileMode=true, if set this causes the bam file paths to be modified so they are <localBamFilePathPrefix>/<analysis_id>/<bam_file>, also affects the bai path implicitly. This is done so you can continue working with the decider.
localBamFilePathPrefix=[% localBamFilePathPrefix %]

# END NEW ITEMS

# basic setup
coresAddressable=[% coresAddressable  %]
memHostMbAvailable=[% memHostMbAvailable %]
tabixSrvUri=[% tabixSrvUri  %]
pemFile=[% pemFile %]
uploadPemFile=[% uploadPemFile %]
seqware-output-lines-number=[% seqwareOutputLinesNumber %]
gnosServer=[% gnosServer %]
## comment out upload server to block vcfUpload
uploadServer=[% uploadServer %]

study-refname-override=[% studyRefnameOverride %]
analysis-center-override=[% analysisCenterOverride %]
#center-override=
#ref-center-override=
upload-test=[% uploadTest %]
upload-skip=[% uploadSkip %]

assembly=GRCh37
species=human
seqType=WGS
gender=L

# test data, will be overriden unless testMode=true
testMode=[% testMode %]

# the donor information
tumourAliquotIds=[% tumourAliquotIds %]
tumourAnalysisIds=[% tumourAnalysisIds %]
tumourBams=[% tumourBams %]
controlAnalysisId=[% controlAnalysisId %]
controlBam=[% controlBam %]

refExclude=MT,GL%,hs37d5,NC_007605

# GENOS
memBasFileGet=4000
memGnosDownload=16000
memUpload=16000

# GENERIC
memWorkflowOverhead=3000
memPackageResults=4000
memMarkTime=4000
memGenotype=4000
memContam=4000
memQcMetrics=4000
memGetTbi=4000

contamDownSampOneIn=25

#PICNIC
memPicnicCounts=4000
memPicnicMerge=4000

#BATTENBERG
memUnpack=4000
memBbMerge=4000

# ASCAT
memAlleleCount=4000
memAscat=8000
memAscatFinalise=4000

# PINDEL
memPindelInput=12000
memPindelPerThread=8000
memPindelVcf=8000
memPindelMerge=6000
memPindelFlag=8000

# BRASS
memBrassInput=6000
memBrassGroup=4500
memBrassFilter=4500
memBrassSplit=4000
memBrassAssemblePerThread=4000
memBrassGrass=4000
memBrassTabix=4000

# CAVEMAN
memCaveCnPrep=4000
memCavemanSetup=4000
memCavemanSplit=4000
memCavemanSplitConcat=4000
memCavemanMstepPerThread=3000
memCavemanMerge=4000
memCavemanEstepPerThread=3000
memCavemanMergeResults=4000
memCavemanAddIds=4000
memCavemanFlag=5000
memCavemanTbiClean=4000
