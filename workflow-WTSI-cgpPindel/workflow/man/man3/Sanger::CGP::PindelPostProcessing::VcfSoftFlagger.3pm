.\" Automatically generated by Pod::Man 2.25 (Pod::Simple 3.16)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.ie \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.el \{\
.    de IX
..
.\}
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "Sanger::CGP::PindelPostProcessing::VcfSoftFlagger 3"
.TH Sanger::CGP::PindelPostProcessing::VcfSoftFlagger 3 "2014-06-06" "perl v5.14.2" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.IP "Param 1 full input vcf file path. If the path ends in '.gz' an attempt to un-bgzip the file before processing will be made." 4
.IX Item "Param 1 full input vcf file path. If the path ends in '.gz' an attempt to un-bgzip the file before processing will be made."
.PD 0
.IP "Param 2 full output vcf file path. If the path ends in '.gz' an attempt to bgzip the file after processing will be made." 4
.IX Item "Param 2 full output vcf file path. If the path ends in '.gz' an attempt to bgzip the file after processing will be made."
.IP "Param 1 Vcf object." 4
.IX Item "Param 1 Vcf object."
.IP "Param 2 an open writable file handle." 4
.IX Item "Param 2 an open writable file handle."
.IP "reformat_header Vcf module makes a mess of this and does not group common header types simply take the existing data and use the order that each header type is first seen and build an array of each following element of that type" 4
.IX Item "reformat_header Vcf module makes a mess of this and does not group common header types simply take the existing data and use the order that each header type is first seen and build an array of each following element of that type"
.IP "Param 1 Vcf object." 4
.IX Item "Param 1 Vcf object."
.IP "Returns the header as a formatted string." 4
.IX Item "Returns the header as a formatted string."
.IP "_parse_user_defined_filters" 4
.IX Item "_parse_user_defined_filters"
.PD
.Vb 1
\&  Modified from vcf\-annotate vcftools. Takes a vcf\-annotate filter file and reads it into the flagger.
.Ve
.IP "Param 1 Vcf object." 4
.IX Item "Param 1 Vcf object."
.PD 0
.IP "Param 2 Full file path to a filter file." 4
.IX Item "Param 2 Full file path to a filter file."
.IP "Param 3 Filter type string (udef_filters | udef_flags). This determins how the filter file is treated i.e. as \s-1INFO\s0 flags or filters." 4
.IX Item "Param 3 Filter type string (udef_filters | udef_flags). This determins how the filter file is treated i.e. as INFO flags or filters."
.IP "apply_user_defined_filters" 4
.IX Item "apply_user_defined_filters"
.PD
.Vb 1
\&  Modified from vcf\-annotate vcftools. Applies the filters of a specified filter\-set to a line of data.
.Ve
.IP "Param 1 Vcf object." 4
.IX Item "Param 1 Vcf object."
.PD 0
.IP "Param 2 Array-ref representing the vcf line being worked on." 4
.IX Item "Param 2 Array-ref representing the vcf line being worked on."
.IP "Param 3 Filter type string (udef_filters | udef_flags). This determins which filter-set is to be applied i.e. as \s-1INFO\s0 flags or filters." 4
.IX Item "Param 3 Filter type string (udef_filters | udef_flags). This determins which filter-set is to be applied i.e. as INFO flags or filters."
.IP "Returns An array-ref of the modified line." 4
.IX Item "Returns An array-ref of the modified line."
.PD
.SH "POD ERRORS"
.IX Header "POD ERRORS"
Hey! \fBThe above document had some coding errors, which are explained below:\fR
.IP "Around line 52:" 4
.IX Item "Around line 52:"
Unknown directive: =head
.IP "Around line 54:" 4
.IX Item "Around line 54:"
\&'=item' outside of any '=over'
.IP "Around line 80:" 4
.IX Item "Around line 80:"
Unknown directive: =head
